{{>blog/header}}
<h1>Compose Blog Post</h1>

<form class="form-horizontal fuelux">
    {{! TITLE }}
    <div class="form-group">
        <label for="blog-title" class="col-sm-1 control-label">Title</label>

        <div class="col-sm-11">
            <input type="text" class="form-control" id="blog-title" placeholder="Title (required)">
        </div>
    </div>

    {{! SEO }}
    <div class="form-group">
        <label for="blog-seo" class="col-sm-1 control-label">SEO</label>

        <div class="col-sm-11">
            <input type="text" class="form-control" id="blog-seo" placeholder="SEO URL (required)">
            <span class="help-block" style="margin-bottom: 0 !important">If you choose my-post as the SEO URL, then the URL to view this post will be {{baseUrl}}post/my-post</span>
        </div>
    </div>

    {{! SUBTITLE }}
    <div class="form-group">
        <label for="blog-subtitle" class="col-sm-1 control-label">Subtitle</label>

        <div class="col-sm-11">
            <input type="text" class="form-control" id="blog-subtitle" placeholder="Subtitle">
        </div>
    </div>

    {{! TAGS }}
    <div class="form-group">
        <label for="tags-pillbox" class="col-sm-1 control-label">Tags</label>

        <div class="col-sm-11">
            <div class="pillbox" id="tags-pillbox">
                <ul class="clearfix pill-group">
                    <li class="pillbox-input-wrap btn-group">
                        <a class="pillbox-more">and <span class="pillbox-more-count"></span> more...</a>
                        <input type="text" class="form-control dropdown-toggle pillbox-add-item" placeholder="Add tag">
                        <button type="button" class="dropdown-toggle sr-only">
                            <span class="caret"></span>
                            <span class="sr-only">Toggle Dropdown</span>
                        </button>
                        <ul class="suggest dropdown-menu" role="menu" data-toggle="dropdown" data-flip="auto"></ul>
                    </li>
                </ul>
            </div>

        </div>
    </div>

    {{! EDITOR }}
    <div id="summernote"></div>

    <div class="row">
        <div class="col-sm-9">
            <div class="pull-right">
                {{! LIVE CHECKBOX }}
                <div class="checkbox highlight" id="blog-live">
                    <label class="checkbox-custom checkbox-inline highlight" data-initialize="checkbox">
                        <input class="sr-only" type="checkbox" value="live" checked="checked">
                        <span class="checkbox-label checked">Live (uncheck to save as draft)</span>
                    </label>
                </div>

                {{! OPEN CHECKBOX }}
                <div class="checkbox highlight" id="blog-open">
                    <label class="checkbox-custom checkbox-inline highlight" data-initialize="checkbox">
                        <input class="sr-only" type="checkbox" value="open" checked="checked">
                        <span class="checkbox-label checked">Open (uncheck to disallow new comments)</span>
                    </label>
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="pull-right">
                <button id="save-post-button" class="btn btn-primary" style="margin-top: 10px">Save Post</button>
                <button id="preview-post-button" class="btn btn-default" style="margin-top: 10px">Preview Post</button>
                <button id="cancel-post-button" class="btn btn-danger" style="margin-top: 10px">Cancel Post</button>
            </div>
        </div>
    </div>
</form>
<script>
    $(document).ready(function () {
        {{!--
           --  resize summernote on window resize
           --}}
        function resize() {
            // found this code: https://github.com/summernote/summernote/blob/5672e5dc347ed9be45e0ec278f7040d2ee20dee1/src/js/module/Fullscreen.js
            var $noteEditor   = $('.note-editor'),
                $codable      = $('.note-codable'),
                $editable     = $('.note-editable'),
                $toolbar      = $('.note-toolbar'),
                $footerBottom = $('#footer-bottom'),
                editorHeight  = $(window).height() - $noteEditor.position().top - $footerBottom.height() - $toolbar.height() - 125; //  - $footerBottom.position().top;

            $codable.height(editorHeight);
            $editable.height(editorHeight);
        }

        $(window).on('resize', resize);

        {{!--
           -- initialize sumemrnote
           --}}
        var $tagsPillbox  = $('#tags-pillbox'),
            $summernote   = $('#summernote'),
            $footerBottom = $('#footer-bottom'),
            editorHeight  = $(window).height() - $summernote.position().top - $footerBottom.height() - 125; //  - $footerBottom.position().top;

        $summernote.summernote({ height : editorHeight });

        {{!--
           -- Tags Pillbox
           --}}
        var pillboxTypeahead = new DelayedTask(function ($pillbox, callback) {
            var me = this;

            if ($pillbox) {
                var val = $pillbox.val().trim();
                if (val.length) {
                    rpc('Tags.list', {
                        params  : {
                            pattern : val
                        },
                        success : function (response) {
                            if (me.handle) {
                                var data = [];
                                $.each(response.list, function (item) {
                                    data.push({
                                        text : item.tagName
                                    });
                                });
                                callback({ data : data });
                            }
                        }
                    })
                }
            }
        });

        $tagsPillbox.pillbox({
            edit      : true,
            onKeyDown : function (data, callback) {
                pillboxTypeahead.defer(200, $(data.event.currentTarget), callback);
            }
        });

        $tagsPillbox.on('added.fu.pillbox', function (e, data) {
            console.log('added ', arguments);
            pillboxTypeahead.cancel();
            setTimeout(function () {
                $('#tags-pillbox input').focus();
            }, 100)
        });

        {{!--
           -- SUBMIT
           --}}
        $('#save-post-button').on('click', function (e) {
            e.preventDefault();
            var o      = {
                    title         : $('#blog-title').val().trim(),
                    seo           : $('#blog-seo').val().trim(),
                    subtitle      : $('#blog-subtitle').val().trim(),
                    category      : $('#category-select').selectlist('selectedItem').value,
                    content       : $('#summernote').code(),
                    live          : $('#blog-live input').is(':checked'),
                    open          : $('#blog-open input').is(':checked'),
                    tags          : $('#tags-pillbox').pillbox('items').map(function (o) {
                        return o.text
                    }),
                    contentFormat : 'html'
                },
                errors = [];

            if (!o.title.length) {
                $('#blog-title').parent().addClass('has-error');
                errors.push('<li>Title is required</li>');
            }
            else {
                $('#blog-title').parent().removeClass('has-error');
            }

            if (!o.seo.length || o.seo.replace(/[0-9a-zA-Z-]/g, '').length) {
                $('#blog-seo').parent().addClass('has-error');
                errors.push('<li>SEO has invalid characters in it.  Only letters, numbers, and dash/hyphens allowed.</li>');
            }
            else {
                $('#blog-seo').parent().removeClass('has-error');
            }

            if (errors.length) {
                BootstrapDialog.alert({
                    type: BootstrapDialog.TYPE_DANGER,
                    title: 'Errors',
                    message: '<ul>' + errors.join('\n') + '</ul>'
                });
                return;
            }

//            console.dir(o);
            $.blockUI();
            rpc('Blog.save', {
                params  : {
                    post : o
                },
                success : function (o) {
                    $.unblockUI();
                    if (o.success) {
                        BootstrapDialog.alert({
                            title    : 'Success!',
                            message  : 'Post created',
                            callback : function () {
                                window.location.href = '/post/' + o.post.seo
                            }
                        });
                    }
                    else {
                        BootstrapDialog.alert({
                            type    : BootstrapDialog.TYPE_DANGER,
                            title   : 'Error',
                            message : o.message
                        });
                    }
                }
            })
        });

    });
</script>
{{>blog/footer}}
